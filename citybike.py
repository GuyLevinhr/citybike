# -*- coding: utf-8 -*-
"""cityBike.ipynb

Automatically generated by Colaboratory.

Original file is located at
	https://colab.research.google.com/drive/1Kjm-eHMgyqDCkxAuh-Kf0EofpOUwQsli?usp=sharing
"""

import requests
import pandas as pd

def fetch_data(url):
  # fetches data from URL
  cityBikeResponse = requests.get(url)
  cityBikeDF = pd.DataFrame(cityBikeResponse.json()['stationBeanList'])
  
  return cityBikeDF

def enrich_data(data):
  # Enrich data with "stationColor"
  # "brokenDocks": Number of docks that are not functional
  # "stationColor": defined by number of brokenDocks in the station
  # green <= 10 , 10 < yellow < 30, red >= 30

  # Add a calculated column Finding the color of the station
  data["brokenDocks"] = data["totalDocks"] - (data["availableBikes"] + data["availableDocks"])
  
  # find the station color
  data["stationColor"] = data.brokenDocks.map(lambda bd : 'green' if bd <= 10 else 'yellow' if bd > 10 and bd <= 29  else 'red')

  return data

def save_data(processed_data):
  # save the business data in an accesible location
  processed_data.to_json('/content/cityBike.json',orient='records')

  # display a plot bar of amount of each station status
  processed_data.groupby('stationColor')['stationColor'].count().plot(kind='bar')
  pass

#################################
### Main data ingestion logic ###
#################################
def start_data_ingestion(url):
  data = fetch_data(url)
  processed_data = enrich_data(data)
  save_data(processed_data)

if __name__ == "__main__":
  citibikenyc_url = "http://citibikenyc.com/stations/json"
  start_data_ingestion(url=citibikenyc_url)